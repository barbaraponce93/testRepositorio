/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guia2_ejercicio04;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fernandoalvarez
 */
public class BusquedaPorRubroView extends javax.swing.JInternalFrame {
private DefaultTableModel modelo = new DefaultTableModel(){

    public boolean isCellEditable(int fila,int columna){
        return false;
    }
};    

    /**
     * Creates new form BusquedaPorRubroView
     */
    public BusquedaPorRubroView() {
        initComponents();
        armarCabecera();
        cargarCB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbRubro = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtRubro = new javax.swing.JTable();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(429, 278));

        jLabel1.setFont(new java.awt.Font("Apple SD Gothic Neo", 1, 18)); // NOI18N
        jLabel1.setText("Listado de Productos por Rubro");

        jLabel2.setFont(new java.awt.Font("Apple SD Gothic Neo", 2, 14)); // NOI18N
        jLabel2.setText("Elija rubro :");

        jcbRubro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbRubroActionPerformed(evt);
            }
        });

        jtRubro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtRubro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jcbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbRubro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbRubroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbRubroActionPerformed
       //captura el evento del click en el combo box, extrae lo  seleccionado en un String 
      Categoria seleccion = (Categoria)jcbRubro.getSelectedItem();
      
      if (seleccion != Categoria.SELECCIONAR){
          modelo.setRowCount(0);
          verListaEnTabla_x_Rubro();// nuestra la tabla x la catgoria elegida si hay elementos
      }else{
          modelo.setRowCount(0); 
      }   
    }//GEN-LAST:event_jcbRubroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Categoria> jcbRubro;
    private javax.swing.JTable jtRubro;
    // End of variables declaration//GEN-END:variables
//-------------------------------------------------------------------------------
    private void armarCabecera(){
    
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        jtRubro.setModel(modelo);
    }
//-------------------------------------------------------------------------------    
    private void cargarCB(){
     //Cargar el combo box con los items
        jcbRubro.addItem(Categoria.SELECCIONAR);
        jcbRubro.addItem(Categoria.COMESTIBLE);
        jcbRubro.addItem(Categoria.LIMPIEZA);
        jcbRubro.addItem(Categoria.PERFUMERÍA);
}
//-------------------------------------------------------------------------------    
 public void verListaEnTabla_x_Rubro(){
    //muestra la lista segun la categoria elegida y la ordena de por nombre   
    if (!Menu.listaProductos.isEmpty()){         
        Categoria aux = (Categoria)jcbRubro.getSelectedItem();
        for (Producto p: Menu.listaProductos){
            if (p.getRubro()== aux){
                modelo.addRow(new Object[]{p.getCodigo(),p.getDescripcion(),p.getPrecio(),p.getStock()}); 
            }       
        }
    }       
}
 
}//fin
