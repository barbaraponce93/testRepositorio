
package guia2_ejercicio04;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class BusquedaPorPrecioView extends javax.swing.JInternalFrame {
private DefaultTableModel modelo = new DefaultTableModel(){

public boolean isCellEditable(int fila,int columna){
    return false;
}
};    

    /**
     * Creates new form BusquedaPorPrecioView
     */
    public BusquedaPorPrecioView() {
        initComponents();
        armarCabeceraPrecio();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtPrecioFinal = new javax.swing.JTextField();
        jtPrimerPrecio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtablaPrecio = new javax.swing.JTable();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Apple SD Gothic Neo", 1, 18)); // NOI18N
        jLabel1.setText("Listado por Precio");

        jLabel2.setFont(new java.awt.Font("Apple SD Gothic Neo", 2, 14)); // NOI18N
        jLabel2.setText("Entre $");

        jLabel3.setFont(new java.awt.Font("Apple SD Gothic Neo", 2, 14)); // NOI18N
        jLabel3.setText("y");

        jtPrecioFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtPrecioFinalKeyReleased(evt);
            }
        });

        jtPrimerPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtPrimerPrecioKeyReleased1(evt);
            }
        });

        jtablaPrecio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtablaPrecio);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtPrimerPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtPrecioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtPrimerPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jtPrecioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtPrimerPrecioKeyReleased1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPrimerPrecioKeyReleased1
        
        borrarFilas();
  
        try{
            if (jtPrimerPrecio.getText().isEmpty()){
                return;
            }else{                
                MuestraTablaPrecio(Double.parseDouble(jtPrimerPrecio.getText()),1.7E+308);
            }      
        }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Debe ingresar solamente número ");  
                jtPrimerPrecio.setText("");
            }
    }//GEN-LAST:event_jtPrimerPrecioKeyReleased1

    private void jtPrecioFinalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtPrecioFinalKeyReleased
        borrarFilas();
        try{
            // si los dos campos tienen un valor
            if (!jtPrimerPrecio.getText().isEmpty() && !jtPrecioFinal.getText().isEmpty()){
            // si el primer campo es menor o igual al segundo
                if(Double.parseDouble(jtPrimerPrecio.getText())<= 
                   Double.parseDouble(jtPrecioFinal.getText())){
                    //se muestra la tabla
                   MuestraTablaPrecio(Double.parseDouble(jtPrimerPrecio.getText()),Double.parseDouble(jtPrecioFinal.getText()));
                }else{
                // si el campo final es menor que el primer campo
                // se muestra la tabla con un valor arbitrario
                   MuestraTablaPrecio(Double.parseDouble(jtPrimerPrecio.getText()),1.7E+308);
                }
            }else if (jtPrecioFinal.getText().isEmpty()){
                // esta linea la escribo para que muestre la excepcion 
                //ya que no va a poder parsear un caracter
               double aux = Double.parseDouble(jtPrecioFinal.getText());            
            }else{
                double aux = Double.parseDouble(jtPrecioFinal.getText());
            }
        }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Debe ingresar solamente número ");  
                jtPrecioFinal.setText("");
                
        }
    }//GEN-LAST:event_jtPrecioFinalKeyReleased
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtPrecioFinal;
    private javax.swing.JTextField jtPrimerPrecio;
    private javax.swing.JTable jtablaPrecio;
    // End of variables declaration//GEN-END:variables
//-------------------------------------------------------------------------------
    private void armarCabeceraPrecio(){
    
        modelo.addColumn("Código");
        modelo.addColumn("Descripción");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        jtablaPrecio.setModel(modelo);
    }
//------------------------------------------------------------------------------- 
    private void borrarFilas(){
        int filas= jtablaPrecio.getRowCount() -1;
        for( ;filas>=0;filas--){
            modelo.removeRow(filas);
        }
    }
//------------------------------------------------------------------------------- 
    private void MuestraTablaPrecio(double precio1, double precioFinal){

        for (Producto pro:Menu. listaProductos){ 

            if((precio1 <= pro.getPrecio()) && (pro.getPrecio()<=precioFinal)){
            modelo.addRow(new Object[]{
                pro.getCodigo(),
                pro.getDescripcion(),
                pro.getPrecio(),
                pro.getStock(),});
            }
        }
    } 
}//fin
